---
import Layout from "../layouts/Layout.astro";
import "@/styles/global.css";
import Dashboard from "@/components/Dashboard.astro";
---

<script is:inline>
  const getThemePreference = () => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };
  const isDark = getThemePreference() === "dark";
  document.documentElement.classList[isDark ? "add" : "remove"]("dark");

  if (typeof localStorage !== "undefined") {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains("dark");
      localStorage.setItem("theme", isDark ? "dark" : "light");
    });
    observer.observe(document.documentElement, {
      attributes: true,
      attributeFilter: ["class"],
    });
  }
</script>

<script>
  import {
    levelForecastStore,
    levelObservationStore,
    weatherForecastStore,
  } from "@/store";

  import { app } from "@/firebase/client";

  import { getBytes, getStorage, ref } from "firebase/storage";

  export const storage = getStorage(app);

  const fetchBucketItem = async (path: string) => {
    const path_ref = ref(storage, path);
    const bytes = await getBytes(path_ref);

    return JSON.parse(new TextDecoder().decode(bytes));
  };

  fetchBucketItem("prediction/prediction.json").then((data) => {
    levelForecastStore.set(data);
  });

  fetchBucketItem("prediction/observation.json").then((data) => {
    levelObservationStore.set(data);
  });

  fetchBucketItem("weather/latest_forecast.json").then((data) => {
    weatherForecastStore.set(data);
  });
</script>

<Layout>
  <main class="min-h-screen bg-background text-primary-foreground">
    <!-- Under construction banner -->
    <div class="bg-secondary p-4 mb-4 text-center rounded-sm">
      <span class="font-bold text-lg text-secondary-foreground">
        ðŸš§ This service is still a work in progress. Please do not rely on any
        data from it! ðŸš§
      </span>
    </div>
    <div class="container px-2 mx-auto">
      <Dashboard />
    </div>
  </main>
</Layout>
